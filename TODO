https://chat.tinycms.xyz:3002/#/
      
我正在查看h264解码，在宏块层，如下函数中：
```cpp
int SliceData::decoding_process(PictureBase &picture) {
  /* ------------------ 设置别名 ------------------ */
  const int32_t picWidthInSamplesL = picture.PicWidthInSamplesL;
  const int32_t picWidthInSamplesC = picture.PicWidthInSamplesC;
  const int32_t BitDepth = picture.m_slice.m_sps.BitDepthY;
  uint8_t *&pic_buff_luma = picture.m_pic_buff_luma;
  uint8_t *&pic_buff_cb = picture.m_pic_buff_cb;
  uint8_t *&pic_buff_cr = picture.m_pic_buff_cr;
  const int32_t QP1 = picture.m_mbs[picture.CurrMbAddr].QP1Y;
  /* ------------------  End ------------------ */

  //----------------------------------- 帧内预测 -----------------------------------
  if (picture.m_mbs[picture.CurrMbAddr].m_mb_pred_mode == Intra_4x4) {
    picture.transform_decoding_process_for_4x4_luma_residual_blocks(
        0, 0, BitDepth, picWidthInSamplesL, pic_buff_luma);
    picture.transform_decoding_process_for_chroma_samples(1, picWidthInSamplesC,
                                                          pic_buff_cb);
    picture.transform_decoding_process_for_chroma_samples(0, picWidthInSamplesC,
                                                          pic_buff_cr);
  } else if (picture.m_mbs[picture.CurrMbAddr].m_mb_pred_mode == Intra_8x8) {
    picture.transform_decoding_process_for_8x8_luma_residual_blocks(
        0, 0, BitDepth, picWidthInSamplesL,
        picture.m_mbs[picture.CurrMbAddr].LumaLevel8x8, pic_buff_luma);
    picture.transform_decoding_process_for_chroma_samples(1, picWidthInSamplesC,
                                                          pic_buff_cb);
    picture.transform_decoding_process_for_chroma_samples(0, picWidthInSamplesC,
                                                          pic_buff_cr);
  } else if (picture.m_mbs[picture.CurrMbAddr].m_mb_pred_mode == Intra_16x16) {
    picture
        .transform_decoding_process_for_luma_samples_of_Intra_16x16_macroblock_prediction_mode(
            0, BitDepth, QP1, picWidthInSamplesL,
            picture.m_mbs[picture.CurrMbAddr].Intra16x16DCLevel,
            picture.m_mbs[picture.CurrMbAddr].Intra16x16ACLevel, pic_buff_luma);
    picture.transform_decoding_process_for_chroma_samples(1, picWidthInSamplesC,
                                                          pic_buff_cb);
    picture.transform_decoding_process_for_chroma_samples(0, picWidthInSamplesC,
                                                          pic_buff_cr);
  } else if (picture.m_mbs[picture.CurrMbAddr].m_name_of_mb_type == I_PCM)
    picture.Sample_construction_process_for_I_PCM_macroblocks();
  else {
    picture.inter_prediction_process();
    if (picture.m_mbs[picture.CurrMbAddr].transform_size_8x8_flag == 0)
      picture.transform_decoding_process_for_4x4_luma_residual_blocks_inter(
          0, 0, BitDepth, picWidthInSamplesL, pic_buff_luma);
    else
      picture.transform_decoding_process_for_8x8_luma_residual_blocks_inter(
          0, 0, BitDepth, picWidthInSamplesL,
          picture.m_mbs[picture.CurrMbAddr].LumaLevel8x8, pic_buff_luma);

    picture.transform_decoding_process_for_chroma_samples_inter(
        1, picWidthInSamplesC, pic_buff_cb);
    picture.transform_decoding_process_for_chroma_samples_inter(
        0, picWidthInSamplesC, pic_buff_cr);
  }
  return 0;
}
```
这里具体是在做什么？
